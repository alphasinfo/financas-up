const { PrismaClient } = require('@prisma/client');

console.log('\nüîå TESTANDO CONEX√ÉO COM SUPABASE\n');
console.log('='.repeat(70));

const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error'],
});

async function testarConexao() {
  try {
    console.log('\nüì° Tentando conectar ao Supabase...\n');
    
    // Timeout de 10 segundos
    const timeout = new Promise((_, reject) => 
      setTimeout(() => reject(new Error('Timeout: Conex√£o demorou mais de 10 segundos')), 10000)
    );
    
    const conexao = prisma.$connect();
    
    await Promise.race([conexao, timeout]);
    
    console.log('‚úÖ Conex√£o estabelecida com sucesso!\n');
    
    // Testar query simples
    console.log('üìä Testando query...');
    const result = await prisma.$queryRaw`SELECT current_database(), version()`;
    console.log('‚úÖ Query executada com sucesso!\n');
    console.log('Resultado:', result);
    
    await prisma.$disconnect();
    
    console.log('\n' + '='.repeat(70));
    console.log('\n‚úÖ CONEX√ÉO OK! Supabase est√° acess√≠vel.\n');
    console.log('='.repeat(70));
    
  } catch (error) {
    console.log('\n‚ùå ERRO DE CONEX√ÉO!\n');
    console.log('Mensagem:', error.message);
    console.log('\nüí° Poss√≠veis causas:\n');
    console.log('1. URL do Supabase incorreta no .env');
    console.log('2. Senha incorreta');
    console.log('3. Supabase est√° pausado ou indispon√≠vel');
    console.log('4. Firewall bloqueando a conex√£o');
    console.log('5. Porta incorreta (deve ser 6543 com pgbouncer)\n');
    
    console.log('üîç Verifique:\n');
    console.log('1. Acesse: https://supabase.com/dashboard/project/lfzqihajyvmdwrjtefco');
    console.log('2. V√° em Settings ‚Üí Database');
    console.log('3. Copie a Connection String (URI)');
    console.log('4. Verifique se o projeto est√° ativo (n√£o pausado)\n');
    
    await prisma.$disconnect();
    process.exit(1);
  }
}

testarConexao();
