const fs = require('fs');
const { execSync } = require('child_process');

console.log('\nüîß ATUALIZA√á√ÉO DE CONFIGURA√á√ÉO SUPABASE\n');
console.log('='.repeat(70));

// Receber par√¢metros
const projectId = process.argv[2];
const password = process.argv[3];
const region = process.argv[4] || 'aws-1-us-east-1';

if (!projectId || !password) {
  console.log('‚ùå Uso incorreto!\n');
  console.log('üìù Como usar:');
  console.log('   node atualizar-config-supabase.js [PROJECT_ID] [PASSWORD] [REGION]\n');
  console.log('üìã Exemplo:');
  console.log('   node atualizar-config-supabase.js abc123xyz456 MinhaSenh@123 aws-0-sa-east-1\n');
  console.log('üí° Region √© opcional (padr√£o: aws-1-us-east-1)\n');
  process.exit(1);
}

console.log('üìã Informa√ß√µes recebidas:\n');
console.log(`   Project ID: ${projectId}`);
console.log(`   Password: ${'*'.repeat(password.length)}`);
console.log(`   Region: ${region}\n`);

// Montar Connection String
const connectionString = `postgresql://postgres.${projectId}:${password}@${region}.pooler.supabase.com:5432/postgres`;

console.log('üîó Connection String gerada:\n');
console.log(`   ${connectionString.replace(password, '*'.repeat(password.length))}\n`);

// Conte√∫do do .env
const envContent = `# Configura√ß√£o Supabase - Projeto: ${projectId}
# Atualizado em: ${new Date().toISOString()}

DATABASE_URL="${connectionString}"
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="fdaed013c233b22e5ab7328adcf82073"
`;

console.log('1Ô∏è‚É£ Atualizando arquivos de configura√ß√£o...\n');

// Atualizar .env
fs.writeFileSync('.env', envContent, 'utf8');
console.log('   ‚úÖ .env atualizado');

// Atualizar .env.supabase
fs.writeFileSync('.env.supabase', envContent, 'utf8');
console.log('   ‚úÖ .env.supabase atualizado');

// Atualizar backups
const backupContent = `DATABASE_URL="${connectionString}"
NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="fdaed013c233b22e5ab7328adcf82073"
`;

fs.writeFileSync('bkp/.env.supabase.bkp', backupContent, 'utf8');
console.log('   ‚úÖ bkp/.env.supabase.bkp atualizado');

fs.writeFileSync('bkp/.env.backup.20251017_154937', `# BACKUP do ambiente Supabase original\n${backupContent}`, 'utf8');
console.log('   ‚úÖ bkp/.env.backup.20251017_154937 atualizado\n');

console.log('2Ô∏è‚É£ Gerando Prisma Client...\n');
try {
  execSync('npx prisma generate', { stdio: 'inherit' });
  console.log('\n   ‚úÖ Prisma Client gerado\n');
} catch (error) {
  console.log('\n   ‚ùå Erro ao gerar Prisma Client\n');
  process.exit(1);
}

console.log('3Ô∏è‚É£ Testando conex√£o com Supabase...\n');
try {
  execSync('node testar-conexao-supabase.js', { stdio: 'inherit' });
  console.log('\n   ‚úÖ Conex√£o testada com sucesso!\n');
} catch (error) {
  console.log('\n   ‚ö†Ô∏è  Erro ao testar conex√£o');
  console.log('   üí° Verifique se o SQL foi executado no Supabase Dashboard\n');
}

console.log('4Ô∏è‚É£ Populando banco com dados de teste...\n');
try {
  execSync('npm run seed', { stdio: 'inherit' });
  console.log('\n   ‚úÖ Seed executado com sucesso!\n');
} catch (error) {
  console.log('\n   ‚ö†Ô∏è  Erro no seed');
  console.log('   üí° Tente executar manualmente: npm run seed\n');
}

console.log('='.repeat(70));
console.log('\n‚úÖ CONFIGURA√á√ÉO CONCLU√çDA!\n');
console.log('üìä Resumo:\n');
console.log(`   ‚Ä¢ Project ID: ${projectId}`);
console.log(`   ‚Ä¢ Region: ${region}`);
console.log(`   ‚Ä¢ Arquivos atualizados: 4`);
console.log(`   ‚Ä¢ Prisma Client: Gerado`);
console.log(`   ‚Ä¢ Conex√£o: Testada`);
console.log(`   ‚Ä¢ Seed: Executado\n`);

console.log('üöÄ Pr√≥ximos passos:\n');
console.log('   1. Testar aplica√ß√£o: npm run dev');
console.log('   2. Acessar: http://localhost:3000');
console.log('   3. Login: teste@financasup.com / 123456\n');

console.log('üìù Para fazer commit das altera√ß√µes:\n');
console.log('   git add .');
console.log('   git commit -m "atualizar-config-novo-projeto-supabase"');
console.log('   git push\n');

console.log('='.repeat(70));
