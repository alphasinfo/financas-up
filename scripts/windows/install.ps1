# Script de Instala√ß√£o - Finan√ßas UP
# Sistema: Windows 10/11
# Data: 16/10/2025

Write-Host "================================================" -ForegroundColor Cyan
Write-Host "  Instala√ß√£o Finan√ßas UP - Windows" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se est√° rodando como Administrador
$isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-not $isAdmin) {
    Write-Host "‚ö†Ô∏è  AVISO: Execute este script como Administrador para melhor experi√™ncia" -ForegroundColor Yellow
    Write-Host ""
}

# 1. Verificar Node.js
Write-Host "üì¶ Verificando Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node -v
    Write-Host "‚úÖ Node.js j√° instalado: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n√£o encontrado!" -ForegroundColor Red
    Write-Host ""
    Write-Host "Por favor, instale o Node.js 20.x ou superior:" -ForegroundColor Yellow
    Write-Host "  https://nodejs.org/en/download/" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Ap√≥s instalar, execute este script novamente." -ForegroundColor Yellow
    Read-Host "Pressione Enter para sair"
    exit 1
}

# 2. Verificar npm
Write-Host "üì¶ Verificando npm..." -ForegroundColor Yellow
try {
    $npmVersion = npm -v
    Write-Host "‚úÖ npm j√° instalado: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm n√£o encontrado!" -ForegroundColor Red
    exit 1
}

# 3. Verificar Git
Write-Host "üì¶ Verificando Git..." -ForegroundColor Yellow
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git j√° instalado: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Git n√£o encontrado. Recomendado para versionamento." -ForegroundColor Yellow
    Write-Host "  Download: https://git-scm.com/download/win" -ForegroundColor Cyan
}

# 4. Instalar depend√™ncias do projeto
Write-Host ""
Write-Host "üì¶ Instalando depend√™ncias do projeto..." -ForegroundColor Yellow
npm install

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro ao instalar depend√™ncias!" -ForegroundColor Red
    Read-Host "Pressione Enter para sair"
    exit 1
}

# 5. Configurar banco de dados
Write-Host ""
Write-Host "üóÑÔ∏è  Configurando banco de dados..." -ForegroundColor Yellow
Write-Host ""

# üíæ BACKUP DE .ENV (se existir)
if (Test-Path .env) {
    $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
    if (-not (Test-Path "bkp")) {
        New-Item -ItemType Directory -Path "bkp" | Out-Null
    }
    Copy-Item .env "bkp\.env.backup.$timestamp"
    Write-Host "‚úÖ Backup do .env salvo em: bkp\.env.backup.$timestamp" -ForegroundColor Green
    Write-Host ""
}

# Verificar se arquivo .env existe
if (-not (Test-Path .env)) {
    Write-Host "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Criando..." -ForegroundColor Yellow
    if (Test-Path .env.example) {
        Copy-Item .env.example .env
    } else {
        'DATABASE_URL="file:./dev.db"' | Out-File -FilePath .env -Encoding UTF8
    }
}

# Aplicar migrations
Write-Host "üîÑ Aplicando migrations do banco..." -ForegroundColor Yellow
npx prisma db push

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro ao aplicar migrations!" -ForegroundColor Red
    Read-Host "Pressione Enter para sair"
    exit 1
}

# Gerar Prisma Client
Write-Host "üîÑ Gerando Prisma Client..." -ForegroundColor Yellow
npx prisma generate

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro ao gerar Prisma Client!" -ForegroundColor Red
    Read-Host "Pressione Enter para sair"
    exit 1
}

# 6. Seed do banco (opcional)
Write-Host ""
$seed = Read-Host "Deseja popular o banco com dados de teste? (s/N)"
if ($seed -eq "s" -or $seed -eq "S") {
    Write-Host "üå± Populando banco de dados..." -ForegroundColor Yellow
    npm run seed
}

# 7. Finaliza√ß√£o
Write-Host ""
Write-Host "================================================" -ForegroundColor Green
Write-Host "  ‚úÖ Instala√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green
Write-Host ""
Write-Host "Para iniciar o servidor de desenvolvimento:" -ForegroundColor White
Write-Host "  npm run dev" -ForegroundColor Yellow
Write-Host ""
Write-Host "O sistema estar√° dispon√≠vel em:" -ForegroundColor White
Write-Host "  http://localhost:3000" -ForegroundColor Yellow
Write-Host ""
Write-Host "Credenciais padr√£o (se usou seed):" -ForegroundColor White
Write-Host "  Email: admin@financas.com" -ForegroundColor Yellow
Write-Host "  Senha: 123456" -ForegroundColor Yellow
Write-Host ""
Read-Host "Pressione Enter para sair"
