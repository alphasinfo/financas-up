#!/usr/bin/env tsx

/**
 * Script para verificar estrutura do banco Supabase
 */

import { PrismaClient } from '@prisma/client';

const DATABASE_URL = 'postgresql://postgres.oqvufceuzwmaztmlhuvh:Alpha124578S1nfo@aws-1-sa-east-1.pooler.supabase.com:5432/postgres';

async function verificarSupabase() {
  console.log('üîç Verificando estrutura do Supabase...\n');

  const prisma = new PrismaClient({
    datasources: {
      db: {
        url: DATABASE_URL,
      },
    },
  });

  try {
    // Testar conex√£o
    console.log('üì° Testando conex√£o...');
    await prisma.$connect();
    console.log('‚úÖ Conex√£o estabelecida\n');

    // Verificar tabelas
    console.log('üìã Verificando tabelas...\n');

    const tabelas = [
      { nome: 'usuarios', model: prisma.usuario },
      { nome: 'categorias', model: prisma.categoria },
      { nome: 'contas_bancarias', model: prisma.contaBancaria },
      { nome: 'cartoes_credito', model: prisma.cartaoCredito },
      { nome: 'faturas', model: prisma.fatura },
      { nome: 'transacoes', model: prisma.transacao },
      { nome: 'emprestimos', model: prisma.emprestimo },
      { nome: 'parcelas_emprestimo', model: prisma.parcelasEmprestimo },
      { nome: 'investimentos', model: prisma.investimento },
      { nome: 'orcamentos', model: prisma.orcamento },
      { nome: 'metas', model: prisma.meta },
      { nome: 'conciliacoes', model: prisma.conciliacao },
      { nome: 'compartilhamentos_conta', model: prisma.compartilhamentoConta },
      { nome: 'convites_compartilhamento', model: prisma.conviteCompartilhamento },
      { nome: 'logs_acesso', model: prisma.logAcesso },
    ];

    for (const { nome, model } of tabelas) {
      try {
        const count = await model.count();
        console.log(`‚úÖ ${nome.padEnd(30)} - ${count} registros`);
      } catch (error: any) {
        console.log(`‚ùå ${nome.padEnd(30)} - ERRO: ${error.message}`);
      }
    }

    console.log('\nüìä Resumo:');
    
    // Contar usu√°rios
    const usuarios = await prisma.usuario.count();
    console.log(`   Usu√°rios: ${usuarios}`);

    // Contar transa√ß√µes
    const transacoes = await prisma.transacao.count();
    console.log(`   Transa√ß√µes: ${transacoes}`);

    // Contar contas
    const contas = await prisma.contaBancaria.count();
    console.log(`   Contas: ${contas}`);

    // Contar cart√µes
    const cartoes = await prisma.cartaoCredito.count();
    console.log(`   Cart√µes: ${cartoes}`);

    console.log('\n‚úÖ Verifica√ß√£o conclu√≠da!');

  } catch (error: any) {
    console.error('\n‚ùå Erro:', error.message);
    console.error('\nüí° Poss√≠veis causas:');
    console.error('   1. Banco de dados n√£o est√° acess√≠vel');
    console.error('   2. Credenciais incorretas');
    console.error('   3. Tabelas n√£o foram criadas (execute migrations)');
    console.error('   4. Firewall bloqueando conex√£o');
    
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

verificarSupabase();
